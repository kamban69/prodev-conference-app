openapi: 3.0.1
info:
  title: Conference GO!
  description: 'This is the Professional Develpoment monolith application used to refactor into microservices.'
  contact:
    email: profdev@hackreactor.com
  version: 1.0.0
servers:
- url: http://localhost:8080/
tags:
- name: accounts
  description: Maintaining accounts for the app
paths:
  /api/accounts:
    post:
      tags:
      - accounts
      summary: Add a new account to the system
      requestBody:
        description: The information used to create the account. The email and password parameters will be trimmed of leading and trailing whitespace.
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/AccountInformation'
        required: true
      responses:
        201:
          description: Successful account creation
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Token'
        400:
          description: Could not create the account and code will be either INVALID_PARAMETER or MISSING_PARAMETER.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Error'
  
components:
  schemas:
    Error:
      required:
      - code
      - message
      type: object
      properties:
        code:
          type: string
          enum:
          - BAD_CREDENTIALS
          - INVALID_TOKEN
          - INVALID_IDENTIFIER
          - INVALID_PARAMETER
          - MISSING_PARAMETER
          - VERSION_CONFLICT
        message:
          type: string
        errors:
          type: object
          additionalProperties:
            type: object
            properties:
              message:
                type: string
              rule:
                type: string
    Token:
      required:
      - tokend
      type: object
      properties:
        token:
          type: string
    AccountInformation:
      required:
      - name
      - email
      - password
      type: object
      properties:
        name:
          type: string
          maxLength: 100
        email:
          type: string
          maxLength: 100
          format: email
        password:
          type: string
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT 
